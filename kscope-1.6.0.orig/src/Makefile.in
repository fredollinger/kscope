# Makefile.in generated by automake 1.10 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 1.1.1.1 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = kscope$(EXEEXT)
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in dotparse.cpp dotparse.h dotscan.cpp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(picsdir)" \
	"$(DESTDIR)$(shelldesktopdir)" "$(DESTDIR)$(shellrcdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_kscope_OBJECTS = bookmarksdlg.$(OBJEXT) calltreedlg.$(OBJEXT) \
	calltreemanager.$(OBJEXT) configfrontend.$(OBJEXT) \
	cscopefrontend.$(OBJEXT) cscopemsgdlg.$(OBJEXT) \
	ctagsfrontend.$(OBJEXT) ctagslist.$(OBJEXT) \
	dirscanner.$(OBJEXT) dotfrontend.$(OBJEXT) dotparse.$(OBJEXT) \
	dotscan.$(OBJEXT) editormanager.$(OBJEXT) editorpage.$(OBJEXT) \
	editortabs.$(OBJEXT) encoder.$(OBJEXT) filelist.$(OBJEXT) \
	fileview.$(OBJEXT) frontend.$(OBJEXT) graphedge.$(OBJEXT) \
	graphnode.$(OBJEXT) graphprefdlg.$(OBJEXT) \
	graphwidget.$(OBJEXT) historypage.$(OBJEXT) \
	historyview.$(OBJEXT) kscope.$(OBJEXT) kscopeactions.$(OBJEXT) \
	kscopeconfig.$(OBJEXT) kscopepixmaps.$(OBJEXT) main.$(OBJEXT) \
	makedlg.$(OBJEXT) makefrontend.$(OBJEXT) \
	newprojectdlg.$(OBJEXT) openprojectdlg.$(OBJEXT) \
	prefcolor.$(OBJEXT) preferencesdlg.$(OBJEXT) \
	preffont.$(OBJEXT) preffrontend.$(OBJEXT) prefopt.$(OBJEXT) \
	progressdlg.$(OBJEXT) project.$(OBJEXT) projectbase.$(OBJEXT) \
	projectfilesdlg.$(OBJEXT) projectmanager.$(OBJEXT) \
	querypage.$(OBJEXT) querypagebase.$(OBJEXT) \
	queryresultsmenu.$(OBJEXT) queryview.$(OBJEXT) \
	queryviewdlg.$(OBJEXT) queryviewdriver.$(OBJEXT) \
	querywidget.$(OBJEXT) scanprogressdlg.$(OBJEXT) \
	searchlist.$(OBJEXT) searchresultsdlg.$(OBJEXT) \
	symbolcompletion.$(OBJEXT) symboldlg.$(OBJEXT) \
	tabwidget.$(OBJEXT) treewidget.$(OBJEXT)
#>- kscope_OBJECTS = $(am_kscope_OBJECTS)
#>+ 28
kscope_final_OBJECTS = dotscan.o dotparse.o kscope.all_cpp.o 
kscope_nofinal_OBJECTS = bookmarksdlg.$(OBJEXT) calltreedlg.$(OBJEXT) \
	calltreemanager.$(OBJEXT) configfrontend.$(OBJEXT) \
	cscopefrontend.$(OBJEXT) cscopemsgdlg.$(OBJEXT) \
	ctagsfrontend.$(OBJEXT) ctagslist.$(OBJEXT) \
	dirscanner.$(OBJEXT) dotfrontend.$(OBJEXT) dotparse.$(OBJEXT) \
	dotscan.$(OBJEXT) editormanager.$(OBJEXT) editorpage.$(OBJEXT) \
	editortabs.$(OBJEXT) encoder.$(OBJEXT) filelist.$(OBJEXT) \
	fileview.$(OBJEXT) frontend.$(OBJEXT) graphedge.$(OBJEXT) \
	graphnode.$(OBJEXT) graphprefdlg.$(OBJEXT) \
	graphwidget.$(OBJEXT) historypage.$(OBJEXT) \
	historyview.$(OBJEXT) kscope.$(OBJEXT) kscopeactions.$(OBJEXT) \
	kscopeconfig.$(OBJEXT) kscopepixmaps.$(OBJEXT) main.$(OBJEXT) \
	makedlg.$(OBJEXT) makefrontend.$(OBJEXT) \
	newprojectdlg.$(OBJEXT) openprojectdlg.$(OBJEXT) \
	prefcolor.$(OBJEXT) preferencesdlg.$(OBJEXT) \
	preffont.$(OBJEXT) preffrontend.$(OBJEXT) prefopt.$(OBJEXT) \
	progressdlg.$(OBJEXT) project.$(OBJEXT) projectbase.$(OBJEXT) \
	projectfilesdlg.$(OBJEXT) projectmanager.$(OBJEXT) \
	querypage.$(OBJEXT) querypagebase.$(OBJEXT) \
	queryresultsmenu.$(OBJEXT) queryview.$(OBJEXT) \
	queryviewdlg.$(OBJEXT) queryviewdriver.$(OBJEXT) \
	querywidget.$(OBJEXT) scanprogressdlg.$(OBJEXT) \
	searchlist.$(OBJEXT) searchresultsdlg.$(OBJEXT) \
	symbolcompletion.$(OBJEXT) symboldlg.$(OBJEXT) \
	tabwidget.$(OBJEXT) treewidget.$(OBJEXT) autocompletionlayout.$(OBJEXT) bookmarkslayout.$(OBJEXT) calltreelayout.$(OBJEXT) cscopemsglayout.$(OBJEXT) fileviewlayout.$(OBJEXT) graphpreflayout.$(OBJEXT) makelayout.$(OBJEXT) newprojectlayout.$(OBJEXT) openprojectlayout.$(OBJEXT) prefcolorlayout.$(OBJEXT) preffontlayout.$(OBJEXT) preffrontendlayout.$(OBJEXT) prefoptlayout.$(OBJEXT) projectfileslayout.$(OBJEXT) queryviewlayout.$(OBJEXT) querywidgetlayout.$(OBJEXT) scanprogresslayout.$(OBJEXT) searchresultslayout.$(OBJEXT) symbollayout.$(OBJEXT) welcomedlg.$(OBJEXT)
@KDE_USE_FINAL_FALSE@kscope_OBJECTS = $(kscope_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@kscope_OBJECTS = $(kscope_final_OBJECTS)
am__DEPENDENCIES_1 =
kscope_DEPENDENCIES = $(am__DEPENDENCIES_1)
#>- kscope_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(kscope_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
kscope_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(kscope_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
LEXCOMPILE = $(LEX) $(LFLAGS) $(AM_LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(LEX) $(LFLAGS) $(AM_LFLAGS)
YLWRAP = $(top_srcdir)/admin/ylwrap
YACCCOMPILE = $(YACC) $(YFLAGS) $(AM_YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(YACC) $(YFLAGS) $(AM_YFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(kscope_SOURCES)
DIST_SOURCES = $(kscope_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
picsDATA_INSTALL = $(INSTALL_DATA)
shelldesktopDATA_INSTALL = $(INSTALL_DATA)
shellrcDATA_INSTALL = $(INSTALL_DATA)
DATA = $(pics_DATA) $(shelldesktop_DATA) $(shellrc_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
HAVE_LEX = @HAVE_LEX@
HAVE_YACC = @HAVE_YACC@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

# these are the headers for your project
noinst_HEADERS = bookmarksdlg.h calltreedlg.h calltreemanager.h \
	configfrontend.h cscopefrontend.h cscopemsgdlg.h ctagsfrontend.h ctagslist.h \
	dirscanner.h dotfrontend.h editormanager.h editorpage.h editortabs.h encoder.h \
	filelist.h fileview.h frontend.h graphedge.h graphnode.h graphprefdlg.h \
	graphwidget.h historypage.h historyview.h kscope.h kscopeactions.h kscopeconfig.h \
	kscopepixmaps.h makedlg.h makefrontend.h newprojectdlg.h openprojectdlg.h prefcolor.h \
	preferencesdlg.h preffont.h preffrontend.h prefopt.h progressdlg.h project.h \
	projectbase.h projectfilesdlg.h projectmanager.h querypage.h querypagebase.h \
	queryresultsmenu.h queryview.h queryviewdlg.h queryviewdriver.h querywidget.h \
	scanprogressdlg.h searchlist.h searchresultsdlg.h symbolcompletion.h symboldlg.h \
	tabwidget.h treewidget.h


# let automoc handle all of the meta source files (moc)
#>- METASOURCES = AUTO
KDE_ICON = kscope

# the application source, library search path, and link libraries
#>- kscope_SOURCES = autocompletionlayout.ui bookmarksdlg.cpp bookmarkslayout.ui \
#>- 	calltreedlg.cpp calltreelayout.ui calltreemanager.cpp configfrontend.cpp \
#>- 	cscopefrontend.cpp cscopemsgdlg.cpp cscopemsglayout.ui ctagsfrontend.cpp ctagslist.cpp \
#>- 	dirscanner.cpp dotfrontend.cpp dotparse.ypp dotscan.lpp editormanager.cpp \
#>- 	editorpage.cpp editortabs.cpp encoder.cpp filelist.cpp fileview.cpp fileviewlayout.ui \
#>- 	frontend.cpp graphedge.cpp graphnode.cpp graphprefdlg.cpp graphpreflayout.ui \
#>- 	graphwidget.cpp historypage.cpp historyview.cpp kscope.cpp kscopeactions.cpp \
#>- 	kscopeconfig.cpp kscopepixmaps.cpp main.cpp makedlg.cpp makefrontend.cpp makelayout.ui \
#>- 	newprojectdlg.cpp newprojectlayout.ui openprojectdlg.cpp openprojectlayout.ui \
#>- 	prefcolor.cpp prefcolorlayout.ui preferencesdlg.cpp preffont.cpp preffontlayout.ui \
#>- 	preffrontend.cpp preffrontendlayout.ui prefopt.cpp prefoptlayout.ui progressdlg.cpp \
#>- 	project.cpp projectbase.cpp projectfilesdlg.cpp projectfileslayout.ui \
#>- 	projectmanager.cpp querypage.cpp querypagebase.cpp queryresultsmenu.cpp queryview.cpp \
#>- 	queryviewdlg.cpp queryviewdriver.cpp queryviewlayout.ui querywidget.cpp \
#>- 	querywidgetlayout.ui scanprogressdlg.cpp scanprogresslayout.ui searchlist.cpp \
#>- 	searchresultsdlg.cpp searchresultslayout.ui symbolcompletion.cpp symboldlg.cpp \
#>- 	symbollayout.ui tabwidget.cpp treewidget.cpp welcomedlg.ui
#>+ 17
kscope_SOURCES= bookmarksdlg.cpp  \
	calltreedlg.cpp  calltreemanager.cpp configfrontend.cpp \
	cscopefrontend.cpp cscopemsgdlg.cpp  ctagsfrontend.cpp ctagslist.cpp \
	dirscanner.cpp dotfrontend.cpp dotparse.ypp dotscan.lpp editormanager.cpp \
	editorpage.cpp editortabs.cpp encoder.cpp filelist.cpp fileview.cpp  \
	frontend.cpp graphedge.cpp graphnode.cpp graphprefdlg.cpp  \
	graphwidget.cpp historypage.cpp historyview.cpp kscope.cpp kscopeactions.cpp \
	kscopeconfig.cpp kscopepixmaps.cpp main.cpp makedlg.cpp makefrontend.cpp  \
	newprojectdlg.cpp  openprojectdlg.cpp  \
	prefcolor.cpp  preferencesdlg.cpp preffont.cpp  \
	preffrontend.cpp  prefopt.cpp  progressdlg.cpp \
	project.cpp projectbase.cpp projectfilesdlg.cpp  \
	projectmanager.cpp querypage.cpp querypagebase.cpp queryresultsmenu.cpp queryview.cpp \
	queryviewdlg.cpp queryviewdriver.cpp  querywidget.cpp \
	 scanprogressdlg.cpp  searchlist.cpp \
	searchresultsdlg.cpp  symbolcompletion.cpp symboldlg.cpp \
	 tabwidget.cpp treewidget.cpp  autocompletionlayout.cpp bookmarkslayout.cpp calltreelayout.cpp cscopemsglayout.cpp fileviewlayout.cpp graphpreflayout.cpp makelayout.cpp newprojectlayout.cpp openprojectlayout.cpp prefcolorlayout.cpp preffontlayout.cpp preffrontendlayout.cpp prefoptlayout.cpp projectfileslayout.cpp queryviewlayout.cpp querywidgetlayout.cpp scanprogresslayout.cpp searchresultslayout.cpp symbollayout.cpp welcomedlg.cpp

kscope_LDFLAGS = $(KDE_RPATH) $(all_libraries)
kscope_LDADD = -lkateinterfaces -lktexteditor $(LIB_KDEUI)

# this is where the desktop file will go 
shelldesktopdir = $(kde_appsdir)/Development
shelldesktop_DATA = kscope.desktop

# this is where the shell's XML-GUI resource file goes
shellrcdir = $(kde_datadir)/kscope
shellrc_DATA = kscopeui.rc kscope_config
picsdir = $(kde_datadir)/kscope/pics
pics_DATA = file_ro.png file_rw.png file_save.png query_locked.png \
			query_unlocked.png tab_list.png call_graph.png called_tree.png calling_tree.png \
			bookmark.png

BUILT_SOURCES = dotparse.h
AM_YFLAGS = -d
#>- all: $(BUILT_SOURCES)
#>+ 1
all: docs-am  $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .lpp .o .obj .ypp
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
dotparse.h: dotparse.cpp
	@if test ! -f $@; then \
	  rm -f dotparse.cpp; \
	  $(MAKE) $(AM_MAKEFLAGS) dotparse.cpp; \
	else :; fi
kscope$(EXEEXT): $(kscope_OBJECTS) $(kscope_DEPENDENCIES) 
	@rm -f kscope$(EXEEXT)
	$(kscope_LINK) $(kscope_OBJECTS) $(kscope_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bookmarksdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/calltreedlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/calltreemanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configfrontend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cscopefrontend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cscopemsgdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctagsfrontend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctagslist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dirscanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dotfrontend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dotparse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dotscan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/editormanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/editorpage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/editortabs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filelist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fileview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frontend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/graphedge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/graphnode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/graphprefdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/graphwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/historypage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/historyview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kscope.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kscopeactions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kscopeconfig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kscopepixmaps.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/makedlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/makefrontend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newprojectdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openprojectdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prefcolor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/preferencesdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/preffont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/preffrontend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prefopt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/progressdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/project.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/projectbase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/projectfilesdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/projectmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/querypage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/querypagebase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/queryresultsmenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/queryview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/queryviewdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/queryviewdriver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/querywidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scanprogressdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/searchlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/searchresultsdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/symbolcompletion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/symboldlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tabwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treewidget.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

.lpp.cpp:
	$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.ypp.cpp:
	$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h $*.h y.output $*.output -- $(YACCCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-picsDATA: $(pics_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(picsdir)" || $(MKDIR_P) "$(DESTDIR)$(picsdir)"
	@list='$(pics_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(picsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(picsdir)/$$f'"; \
	  $(picsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(picsdir)/$$f"; \
	done

uninstall-picsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pics_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(picsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(picsdir)/$$f"; \
	done
install-shelldesktopDATA: $(shelldesktop_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(shelldesktopdir)" || $(MKDIR_P) "$(DESTDIR)$(shelldesktopdir)"
	@list='$(shelldesktop_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(shelldesktopDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(shelldesktopdir)/$$f'"; \
	  $(shelldesktopDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(shelldesktopdir)/$$f"; \
	done

uninstall-shelldesktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(shelldesktop_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(shelldesktopdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(shelldesktopdir)/$$f"; \
	done
install-shellrcDATA: $(shellrc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(shellrcdir)" || $(MKDIR_P) "$(DESTDIR)$(shellrcdir)"
	@list='$(shellrc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(shellrcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(shellrcdir)/$$f'"; \
	  $(shellrcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(shellrcdir)/$$f"; \
	done

uninstall-shellrcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(shellrc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(shellrcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(shellrcdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(picsdir)" "$(DESTDIR)$(shelldesktopdir)" "$(DESTDIR)$(shellrcdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f dotparse.cpp
	-rm -f dotparse.h
	-rm -f dotscan.cpp
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

#>- install-data-am: install-picsDATA install-shelldesktopDATA \
#>- 	install-shellrcDATA
#>+ 2
install-data-am: install-kde-icons  install-picsDATA install-shelldesktopDATA \
	install-shellrcDATA

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-picsDATA \
#>- 	uninstall-shelldesktopDATA uninstall-shellrcDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-picsDATA \
	uninstall-shelldesktopDATA uninstall-shellrcDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-picsDATA install-ps \
	install-ps-am install-shelldesktopDATA install-shellrcDATA \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-picsDATA \
	uninstall-shelldesktopDATA uninstall-shellrcDATA


messages: rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/kscope.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
preffrontend.moc: $(srcdir)/preffrontend.h
	$(MOC) $(srcdir)/preffrontend.h -o preffrontend.moc

#>+ 2
mocs: preffrontend.moc

#>+ 3
frontend.moc: $(srcdir)/frontend.h
	$(MOC) $(srcdir)/frontend.h -o frontend.moc

#>+ 2
mocs: frontend.moc

#>+ 3
querypagebase.moc: $(srcdir)/querypagebase.h
	$(MOC) $(srcdir)/querypagebase.h -o querypagebase.moc

#>+ 2
mocs: querypagebase.moc

#>+ 3
searchresultsdlg.moc: $(srcdir)/searchresultsdlg.h
	$(MOC) $(srcdir)/searchresultsdlg.h -o searchresultsdlg.moc

#>+ 2
mocs: searchresultsdlg.moc

#>+ 3
graphwidget.moc: $(srcdir)/graphwidget.h
	$(MOC) $(srcdir)/graphwidget.h -o graphwidget.moc

#>+ 2
mocs: graphwidget.moc

#>+ 3
prefcolor.moc: $(srcdir)/prefcolor.h
	$(MOC) $(srcdir)/prefcolor.h -o prefcolor.moc

#>+ 2
mocs: prefcolor.moc

#>+ 3
querypage.moc: $(srcdir)/querypage.h
	$(MOC) $(srcdir)/querypage.h -o querypage.moc

#>+ 2
mocs: querypage.moc

#>+ 3
historypage.moc: $(srcdir)/historypage.h
	$(MOC) $(srcdir)/historypage.h -o historypage.moc

#>+ 2
mocs: historypage.moc

#>+ 3
calltreedlg.moc: $(srcdir)/calltreedlg.h
	$(MOC) $(srcdir)/calltreedlg.h -o calltreedlg.moc

#>+ 2
mocs: calltreedlg.moc

#>+ 3
newprojectdlg.moc: $(srcdir)/newprojectdlg.h
	$(MOC) $(srcdir)/newprojectdlg.h -o newprojectdlg.moc

#>+ 2
mocs: newprojectdlg.moc

#>+ 3
bookmarksdlg.moc: $(srcdir)/bookmarksdlg.h
	$(MOC) $(srcdir)/bookmarksdlg.h -o bookmarksdlg.moc

#>+ 2
mocs: bookmarksdlg.moc

#>+ 3
makedlg.moc: $(srcdir)/makedlg.h
	$(MOC) $(srcdir)/makedlg.h -o makedlg.moc

#>+ 2
mocs: makedlg.moc

#>+ 3
graphprefdlg.moc: $(srcdir)/graphprefdlg.h
	$(MOC) $(srcdir)/graphprefdlg.h -o graphprefdlg.moc

#>+ 2
mocs: graphprefdlg.moc

#>+ 3
symbolcompletion.moc: $(srcdir)/symbolcompletion.h
	$(MOC) $(srcdir)/symbolcompletion.h -o symbolcompletion.moc

#>+ 2
mocs: symbolcompletion.moc

#>+ 3
kscopeconfig.moc: $(srcdir)/kscopeconfig.h
	$(MOC) $(srcdir)/kscopeconfig.h -o kscopeconfig.moc

#>+ 2
mocs: kscopeconfig.moc

#>+ 3
progressdlg.moc: $(srcdir)/progressdlg.h
	$(MOC) $(srcdir)/progressdlg.h -o progressdlg.moc

#>+ 2
mocs: progressdlg.moc

#>+ 3
makefrontend.moc: $(srcdir)/makefrontend.h
	$(MOC) $(srcdir)/makefrontend.h -o makefrontend.moc

#>+ 2
mocs: makefrontend.moc

#>+ 3
fileview.moc: $(srcdir)/fileview.h
	$(MOC) $(srcdir)/fileview.h -o fileview.moc

#>+ 2
mocs: fileview.moc

#>+ 3
queryviewdriver.moc: $(srcdir)/queryviewdriver.h
	$(MOC) $(srcdir)/queryviewdriver.h -o queryviewdriver.moc

#>+ 2
mocs: queryviewdriver.moc

#>+ 3
ctagsfrontend.moc: $(srcdir)/ctagsfrontend.h
	$(MOC) $(srcdir)/ctagsfrontend.h -o ctagsfrontend.moc

#>+ 2
mocs: ctagsfrontend.moc

#>+ 3
scanprogressdlg.moc: $(srcdir)/scanprogressdlg.h
	$(MOC) $(srcdir)/scanprogressdlg.h -o scanprogressdlg.moc

#>+ 2
mocs: scanprogressdlg.moc

#>+ 3
symboldlg.moc: $(srcdir)/symboldlg.h
	$(MOC) $(srcdir)/symboldlg.h -o symboldlg.moc

#>+ 2
mocs: symboldlg.moc

#>+ 3
openprojectdlg.moc: $(srcdir)/openprojectdlg.h
	$(MOC) $(srcdir)/openprojectdlg.h -o openprojectdlg.moc

#>+ 2
mocs: openprojectdlg.moc

#>+ 3
preffont.moc: $(srcdir)/preffont.h
	$(MOC) $(srcdir)/preffont.h -o preffont.moc

#>+ 2
mocs: preffont.moc

#>+ 3
dotfrontend.moc: $(srcdir)/dotfrontend.h
	$(MOC) $(srcdir)/dotfrontend.h -o dotfrontend.moc

#>+ 2
mocs: dotfrontend.moc

#>+ 3
queryresultsmenu.moc: $(srcdir)/queryresultsmenu.h
	$(MOC) $(srcdir)/queryresultsmenu.h -o queryresultsmenu.moc

#>+ 2
mocs: queryresultsmenu.moc

#>+ 3
kscopeactions.moc: $(srcdir)/kscopeactions.h
	$(MOC) $(srcdir)/kscopeactions.h -o kscopeactions.moc

#>+ 2
mocs: kscopeactions.moc

#>+ 3
searchlist.moc: $(srcdir)/searchlist.h
	$(MOC) $(srcdir)/searchlist.h -o searchlist.moc

#>+ 2
mocs: searchlist.moc

#>+ 3
prefopt.moc: $(srcdir)/prefopt.h
	$(MOC) $(srcdir)/prefopt.h -o prefopt.moc

#>+ 2
mocs: prefopt.moc

#>+ 3
configfrontend.moc: $(srcdir)/configfrontend.h
	$(MOC) $(srcdir)/configfrontend.h -o configfrontend.moc

#>+ 2
mocs: configfrontend.moc

#>+ 3
editorpage.moc: $(srcdir)/editorpage.h
	$(MOC) $(srcdir)/editorpage.h -o editorpage.moc

#>+ 2
mocs: editorpage.moc

#>+ 3
queryviewdlg.moc: $(srcdir)/queryviewdlg.h
	$(MOC) $(srcdir)/queryviewdlg.h -o queryviewdlg.moc

#>+ 2
mocs: queryviewdlg.moc

#>+ 3
calltreemanager.moc: $(srcdir)/calltreemanager.h
	$(MOC) $(srcdir)/calltreemanager.h -o calltreemanager.moc

#>+ 2
mocs: calltreemanager.moc

#>+ 3
filelist.moc: $(srcdir)/filelist.h
	$(MOC) $(srcdir)/filelist.h -o filelist.moc

#>+ 2
mocs: filelist.moc

#>+ 3
kscope.moc: $(srcdir)/kscope.h
	$(MOC) $(srcdir)/kscope.h -o kscope.moc

#>+ 2
mocs: kscope.moc

#>+ 3
cscopemsgdlg.moc: $(srcdir)/cscopemsgdlg.h
	$(MOC) $(srcdir)/cscopemsgdlg.h -o cscopemsgdlg.moc

#>+ 2
mocs: cscopemsgdlg.moc

#>+ 3
tabwidget.moc: $(srcdir)/tabwidget.h
	$(MOC) $(srcdir)/tabwidget.h -o tabwidget.moc

#>+ 2
mocs: tabwidget.moc

#>+ 3
projectfilesdlg.moc: $(srcdir)/projectfilesdlg.h
	$(MOC) $(srcdir)/projectfilesdlg.h -o projectfilesdlg.moc

#>+ 2
mocs: projectfilesdlg.moc

#>+ 3
editormanager.moc: $(srcdir)/editormanager.h
	$(MOC) $(srcdir)/editormanager.h -o editormanager.moc

#>+ 2
mocs: editormanager.moc

#>+ 3
querywidget.moc: $(srcdir)/querywidget.h
	$(MOC) $(srcdir)/querywidget.h -o querywidget.moc

#>+ 2
mocs: querywidget.moc

#>+ 3
cscopefrontend.moc: $(srcdir)/cscopefrontend.h
	$(MOC) $(srcdir)/cscopefrontend.h -o cscopefrontend.moc

#>+ 2
mocs: cscopefrontend.moc

#>+ 3
queryview.moc: $(srcdir)/queryview.h
	$(MOC) $(srcdir)/queryview.h -o queryview.moc

#>+ 2
mocs: queryview.moc

#>+ 3
historyview.moc: $(srcdir)/historyview.h
	$(MOC) $(srcdir)/historyview.h -o historyview.moc

#>+ 2
mocs: historyview.moc

#>+ 3
preferencesdlg.moc: $(srcdir)/preferencesdlg.h
	$(MOC) $(srcdir)/preferencesdlg.h -o preferencesdlg.moc

#>+ 2
mocs: preferencesdlg.moc

#>+ 3
editortabs.moc: $(srcdir)/editortabs.h
	$(MOC) $(srcdir)/editortabs.h -o editortabs.moc

#>+ 2
mocs: editortabs.moc

#>+ 3
treewidget.moc: $(srcdir)/treewidget.h
	$(MOC) $(srcdir)/treewidget.h -o treewidget.moc

#>+ 2
mocs: treewidget.moc

#>+ 3
ctagslist.moc: $(srcdir)/ctagslist.h
	$(MOC) $(srcdir)/ctagslist.h -o ctagslist.moc

#>+ 2
mocs: ctagslist.moc

#>+ 3
clean-metasources:
	-rm -f  preffrontend.moc frontend.moc querypagebase.moc searchresultsdlg.moc graphwidget.moc prefcolor.moc querypage.moc historypage.moc calltreedlg.moc newprojectdlg.moc bookmarksdlg.moc makedlg.moc graphprefdlg.moc symbolcompletion.moc kscopeconfig.moc progressdlg.moc makefrontend.moc fileview.moc queryviewdriver.moc ctagsfrontend.moc scanprogressdlg.moc symboldlg.moc openprojectdlg.moc preffont.moc dotfrontend.moc queryresultsmenu.moc kscopeactions.moc searchlist.moc prefopt.moc configfrontend.moc editorpage.moc queryviewdlg.moc calltreemanager.moc filelist.moc kscope.moc cscopemsgdlg.moc tabwidget.moc projectfilesdlg.moc editormanager.moc querywidget.moc cscopefrontend.moc queryview.moc historyview.moc preferencesdlg.moc editortabs.moc treewidget.moc ctagslist.moc

#>+ 2
KDE_DIST=hi16-app-kscope.png kscope_config hi32-app-kscope.png welcomedlg.ui makelayout.ui bookmarkslayout.ui tab_list.png graphpreflayout.ui query_unlocked.png cscopemsglayout.ui query_locked.png called_tree.png Makefile.in searchresultslayout.ui scanprogresslayout.ui prefoptlayout.ui newprojectlayout.ui file_rw.png fileviewlayout.ui openprojectlayout.ui queryviewlayout.ui lo16-app-kscope.png autocompletionlayout.ui kscopeui.rc file_ro.png projectfileslayout.ui kscope.lsm lo32-app-kscope.png preffrontendlayout.ui bookmark.png preffontlayout.ui kscope.desktop calltreelayout.ui calling_tree.png call_graph.png prefcolorlayout.ui symbollayout.ui file_save.png Makefile.am querywidgetlayout.ui 

#>+ 23
clean-ui:
	-rm -f \
	autocompletionlayout.cpp autocompletionlayout.h autocompletionlayout.moc \
	bookmarkslayout.cpp bookmarkslayout.h bookmarkslayout.moc \
	calltreelayout.cpp calltreelayout.h calltreelayout.moc \
	cscopemsglayout.cpp cscopemsglayout.h cscopemsglayout.moc \
	fileviewlayout.cpp fileviewlayout.h fileviewlayout.moc \
	graphpreflayout.cpp graphpreflayout.h graphpreflayout.moc \
	makelayout.cpp makelayout.h makelayout.moc \
	newprojectlayout.cpp newprojectlayout.h newprojectlayout.moc \
	openprojectlayout.cpp openprojectlayout.h openprojectlayout.moc \
	prefcolorlayout.cpp prefcolorlayout.h prefcolorlayout.moc \
	preffontlayout.cpp preffontlayout.h preffontlayout.moc \
	preffrontendlayout.cpp preffrontendlayout.h preffrontendlayout.moc \
	prefoptlayout.cpp prefoptlayout.h prefoptlayout.moc \
	projectfileslayout.cpp projectfileslayout.h projectfileslayout.moc \
	queryviewlayout.cpp queryviewlayout.h queryviewlayout.moc \
	querywidgetlayout.cpp querywidgetlayout.h querywidgetlayout.moc \
	scanprogresslayout.cpp scanprogresslayout.h scanprogresslayout.moc \
	searchresultslayout.cpp searchresultslayout.h searchresultslayout.moc \
	symbollayout.cpp symbollayout.h symbollayout.moc \
	welcomedlg.cpp welcomedlg.h welcomedlg.moc 

#>+ 2
docs-am:

#>+ 16
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/locolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/lo16-app-kscope.png $(DESTDIR)$(kde_icondir)/locolor/16x16/apps/kscope.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-kscope.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kscope.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/locolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/lo32-app-kscope.png $(DESTDIR)$(kde_icondir)/locolor/32x32/apps/kscope.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-kscope.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kscope.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/locolor/16x16/apps/kscope.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kscope.png
	-rm -f $(DESTDIR)$(kde_icondir)/locolor/32x32/apps/kscope.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kscope.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
kscope.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/bookmarksdlg.cpp $(srcdir)/calltreedlg.cpp $(srcdir)/calltreemanager.cpp $(srcdir)/configfrontend.cpp $(srcdir)/cscopefrontend.cpp $(srcdir)/cscopemsgdlg.cpp $(srcdir)/ctagsfrontend.cpp $(srcdir)/ctagslist.cpp $(srcdir)/dirscanner.cpp $(srcdir)/dotfrontend.cpp $(srcdir)/editormanager.cpp $(srcdir)/editorpage.cpp $(srcdir)/editortabs.cpp $(srcdir)/encoder.cpp $(srcdir)/filelist.cpp $(srcdir)/fileview.cpp $(srcdir)/frontend.cpp $(srcdir)/graphedge.cpp $(srcdir)/graphnode.cpp $(srcdir)/graphprefdlg.cpp $(srcdir)/graphwidget.cpp $(srcdir)/historypage.cpp $(srcdir)/historyview.cpp $(srcdir)/kscope.cpp $(srcdir)/kscopeactions.cpp $(srcdir)/kscopeconfig.cpp $(srcdir)/kscopepixmaps.cpp $(srcdir)/main.cpp $(srcdir)/makedlg.cpp $(srcdir)/makefrontend.cpp $(srcdir)/newprojectdlg.cpp $(srcdir)/openprojectdlg.cpp $(srcdir)/prefcolor.cpp $(srcdir)/preferencesdlg.cpp $(srcdir)/preffont.cpp $(srcdir)/preffrontend.cpp $(srcdir)/prefopt.cpp $(srcdir)/progressdlg.cpp $(srcdir)/project.cpp $(srcdir)/projectbase.cpp $(srcdir)/projectfilesdlg.cpp $(srcdir)/projectmanager.cpp $(srcdir)/querypage.cpp $(srcdir)/querypagebase.cpp $(srcdir)/queryresultsmenu.cpp $(srcdir)/queryview.cpp $(srcdir)/queryviewdlg.cpp $(srcdir)/queryviewdriver.cpp $(srcdir)/querywidget.cpp $(srcdir)/scanprogressdlg.cpp $(srcdir)/searchlist.cpp $(srcdir)/searchresultsdlg.cpp $(srcdir)/symbolcompletion.cpp $(srcdir)/symboldlg.cpp $(srcdir)/tabwidget.cpp $(srcdir)/treewidget.cpp autocompletionlayout.cpp bookmarkslayout.cpp calltreelayout.cpp cscopemsglayout.cpp fileviewlayout.cpp graphpreflayout.cpp makelayout.cpp newprojectlayout.cpp openprojectlayout.cpp prefcolorlayout.cpp preffontlayout.cpp preffrontendlayout.cpp prefoptlayout.cpp projectfileslayout.cpp queryviewlayout.cpp querywidgetlayout.cpp scanprogresslayout.cpp searchresultslayout.cpp symbollayout.cpp welcomedlg.cpp  frontend.moc graphwidget.moc searchresultsdlg.moc querypagebase.moc newprojectlayout.moc bookmarksdlg.moc newprojectdlg.moc progressdlg.moc symbolcompletion.moc fileviewlayout.moc prefcolorlayout.moc queryviewdriver.moc fileview.moc scanprogressdlg.moc openprojectdlg.moc symboldlg.moc querywidgetlayout.moc queryresultsmenu.moc dotfrontend.moc makelayout.moc preffontlayout.moc calltreelayout.moc kscopeactions.moc symbollayout.moc filelist.moc calltreemanager.moc cscopemsgdlg.moc tabwidget.moc cscopefrontend.moc querywidget.moc editormanager.moc historyview.moc treewidget.moc editortabs.moc scanprogresslayout.moc preffrontend.moc welcomedlg.moc prefcolor.moc querypage.moc historypage.moc calltreedlg.moc makedlg.moc graphprefdlg.moc kscopeconfig.moc makefrontend.moc ctagsfrontend.moc preffont.moc bookmarkslayout.moc prefoptlayout.moc searchresultslayout.moc searchlist.moc prefopt.moc configfrontend.moc editorpage.moc queryviewdlg.moc kscope.moc cscopemsglayout.moc openprojectlayout.moc projectfilesdlg.moc preffrontendlayout.moc queryviewlayout.moc queryview.moc autocompletionlayout.moc graphpreflayout.moc preferencesdlg.moc ctagslist.moc projectfileslayout.moc
	@echo 'creating kscope.all_cpp.cpp ...'; \
	rm -f kscope.all_cpp.files kscope.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kscope.all_cpp.final; \
	for file in bookmarksdlg.cpp calltreedlg.cpp calltreemanager.cpp configfrontend.cpp cscopefrontend.cpp cscopemsgdlg.cpp ctagsfrontend.cpp ctagslist.cpp dirscanner.cpp dotfrontend.cpp editormanager.cpp editorpage.cpp editortabs.cpp encoder.cpp filelist.cpp fileview.cpp frontend.cpp graphedge.cpp graphnode.cpp graphprefdlg.cpp graphwidget.cpp historypage.cpp historyview.cpp kscope.cpp kscopeactions.cpp kscopeconfig.cpp kscopepixmaps.cpp main.cpp makedlg.cpp makefrontend.cpp newprojectdlg.cpp openprojectdlg.cpp prefcolor.cpp preferencesdlg.cpp preffont.cpp preffrontend.cpp prefopt.cpp progressdlg.cpp project.cpp projectbase.cpp projectfilesdlg.cpp projectmanager.cpp querypage.cpp querypagebase.cpp queryresultsmenu.cpp queryview.cpp queryviewdlg.cpp queryviewdriver.cpp querywidget.cpp scanprogressdlg.cpp searchlist.cpp searchresultsdlg.cpp symbolcompletion.cpp symboldlg.cpp tabwidget.cpp treewidget.cpp autocompletionlayout.cpp bookmarkslayout.cpp calltreelayout.cpp cscopemsglayout.cpp fileviewlayout.cpp graphpreflayout.cpp makelayout.cpp newprojectlayout.cpp openprojectlayout.cpp prefcolorlayout.cpp preffontlayout.cpp preffrontendlayout.cpp prefoptlayout.cpp projectfileslayout.cpp queryviewlayout.cpp querywidgetlayout.cpp scanprogresslayout.cpp searchresultslayout.cpp symbollayout.cpp welcomedlg.cpp ; do \
	  echo "#include \"$$file\"" >> kscope.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kscope.all_cpp.final; \
	done; \
	cat kscope.all_cpp.final kscope.all_cpp.files > kscope.all_cpp.cpp; \
	rm -f kscope.all_cpp.final kscope.all_cpp.files

#>+ 3
clean-final:
	-rm -f kscope.all_cpp.cpp

#>+ 3
final:
	$(MAKE) kscope_OBJECTS="$(kscope_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) kscope_OBJECTS="$(kscope_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) kscope_OBJECTS="$(kscope_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) kscope_OBJECTS="$(kscope_nofinal_OBJECTS)" install-am

#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 155
makedlg.lo: makedlg.moc 
frontend.lo: frontend.moc 
$(srcdir)/projectbase.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
tabwidget.lo: tabwidget.moc 
scanprogressdlg.o: scanprogressdlg.moc 
$(srcdir)/ctagsfrontend.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/graphwidget.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
makefrontend.lo: makefrontend.moc 
prefopt.lo: prefopt.moc 
editorpage.lo: editorpage.moc 
progressdlg.lo: progressdlg.moc 
$(srcdir)/symboldlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
kscopeconfig.lo: kscopeconfig.moc 
nmcheck-am: nmcheck
$(srcdir)/encoder.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/project.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
ctagslist.lo: ctagslist.moc 
$(srcdir)/dotscan.lpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/graphprefdlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
searchresultsdlg.lo: searchresultsdlg.moc 
$(srcdir)/preffont.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
kscope.lo: kscope.moc 
makedlg.o: makedlg.moc 
newprojectdlg.lo: newprojectdlg.moc 
graphwidget.o: graphwidget.moc 
$(srcdir)/historyview.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/makefrontend.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/ctagslist.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/queryviewdriver.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/queryview.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/queryviewdlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/preferencesdlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
projectfilesdlg.o: projectfilesdlg.moc 
preferencesdlg.o: preferencesdlg.moc 
$(srcdir)/dotparse.ypp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
frontend.o: frontend.moc 
ctagsfrontend.o: ctagsfrontend.moc 
cscopefrontend.lo: cscopefrontend.moc 
editormanager.o: editormanager.moc 
ctagslist.o: ctagslist.moc 
ctagsfrontend.lo: ctagsfrontend.moc 
queryviewdlg.lo: queryviewdlg.moc 
searchlist.lo: searchlist.moc 
symboldlg.lo: symboldlg.moc 
bookmarksdlg.lo: bookmarksdlg.moc 
scanprogressdlg.lo: scanprogressdlg.moc 
kscopeactions.o: kscopeactions.moc 
$(srcdir)/projectfilesdlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/preffrontend.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/newprojectdlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
graphwidget.lo: graphwidget.moc 
cscopemsgdlg.lo: cscopemsgdlg.moc 
fileview.lo: fileview.moc 
$(srcdir)/querywidget.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/frontend.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
graphprefdlg.lo: graphprefdlg.moc 
$(srcdir)/prefopt.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
historypage.o: historypage.moc 
prefcolor.lo: prefcolor.moc 
editorpage.o: editorpage.moc 
$(srcdir)/makedlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
queryviewdriver.lo: queryviewdriver.moc 
treewidget.o: treewidget.moc 
queryresultsmenu.lo: queryresultsmenu.moc 
$(srcdir)/searchresultsdlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
querypage.o: querypage.moc 
$(srcdir)/kscopeconfig.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/dotfrontend.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
historypage.lo: historypage.moc 
$(srcdir)/calltreedlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
configfrontend.lo: configfrontend.moc 
treewidget.lo: treewidget.moc 
dotfrontend.o: dotfrontend.moc 
searchlist.o: searchlist.moc 
queryview.lo: queryview.moc 
symbolcompletion.o: symbolcompletion.moc 
configfrontend.o: configfrontend.moc 
$(srcdir)/querypagebase.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/filelist.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/main.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/kscopepixmaps.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/progressdlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
tabwidget.o: tabwidget.moc 
historyview.o: historyview.moc 
$(srcdir)/symbolcompletion.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/queryresultsmenu.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/fileview.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/graphedge.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
querywidget.o: querywidget.moc 
searchresultsdlg.o: searchresultsdlg.moc 
calltreedlg.lo: calltreedlg.moc 
$(srcdir)/prefcolor.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
editormanager.lo: editormanager.moc 
querypagebase.o: querypagebase.moc 
calltreedlg.o: calltreedlg.moc 
$(srcdir)/cscopefrontend.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
querypagebase.lo: querypagebase.moc 
kscopeconfig.o: kscopeconfig.moc 
preffont.lo: preffont.moc 
$(srcdir)/bookmarksdlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
openprojectdlg.lo: openprojectdlg.moc 
newprojectdlg.o: newprojectdlg.moc 
$(srcdir)/historypage.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
prefopt.o: prefopt.moc 
filelist.o: filelist.moc 
$(srcdir)/kscope.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
dotfrontend.lo: dotfrontend.moc 
kscopeactions.lo: kscopeactions.moc 
preffont.o: preffont.moc 
fileview.o: fileview.moc 
queryviewdriver.o: queryviewdriver.moc 
$(srcdir)/treewidget.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
graphprefdlg.o: graphprefdlg.moc 
$(srcdir)/editortabs.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
historyview.lo: historyview.moc 
progressdlg.o: progressdlg.moc 
editortabs.o: editortabs.moc 
$(srcdir)/editorpage.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
symbolcompletion.lo: symbolcompletion.moc 
$(srcdir)/editormanager.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/tabwidget.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/dirscanner.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
queryviewdlg.o: queryviewdlg.moc 
queryresultsmenu.o: queryresultsmenu.moc 
makefrontend.o: makefrontend.moc 
symboldlg.o: symboldlg.moc 
projectfilesdlg.lo: projectfilesdlg.moc 
$(srcdir)/openprojectdlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/searchlist.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/kscopeactions.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
querypage.lo: querypage.moc 
$(srcdir)/calltreemanager.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
$(srcdir)/projectmanager.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
cscopemsgdlg.o: cscopemsgdlg.moc 
$(srcdir)/graphnode.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
kscope.o: kscope.moc 
preferencesdlg.lo: preferencesdlg.moc 
$(srcdir)/querypage.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
bookmarksdlg.o: bookmarksdlg.moc 
editortabs.lo: editortabs.moc 
calltreemanager.o: calltreemanager.moc 
cscopefrontend.o: cscopefrontend.moc 
$(srcdir)/scanprogressdlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
querywidget.lo: querywidget.moc 
$(srcdir)/cscopemsgdlg.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
prefcolor.o: prefcolor.moc 
nmcheck: 
queryview.o: queryview.moc 
preffrontend.o: preffrontend.moc 
openprojectdlg.o: openprojectdlg.moc 
$(srcdir)/configfrontend.cpp: autocompletionlayout.h bookmarkslayout.h calltreelayout.h cscopemsglayout.h fileviewlayout.h graphpreflayout.h makelayout.h newprojectlayout.h openprojectlayout.h prefcolorlayout.h preffontlayout.h preffrontendlayout.h prefoptlayout.h projectfileslayout.h queryviewlayout.h querywidgetlayout.h scanprogresslayout.h searchresultslayout.h symbollayout.h welcomedlg.h 
preffrontend.lo: preffrontend.moc 
calltreemanager.lo: calltreemanager.moc 
filelist.lo: filelist.moc 

#>+ 280
prefcolorlayout.cpp: $(srcdir)/prefcolorlayout.ui prefcolorlayout.h prefcolorlayout.moc
	rm -f prefcolorlayout.cpp
	echo '#include <klocale.h>' > prefcolorlayout.cpp
	$(UIC) -tr ${UIC_TR} -i prefcolorlayout.h $(srcdir)/prefcolorlayout.ui > prefcolorlayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" prefcolorlayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_prefcolorlayout,g" >> prefcolorlayout.cpp ;\
	rm -f prefcolorlayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "prefcolorlayout.moc"' >> prefcolorlayout.cpp; else rm -f prefcolorlayout.cpp ; exit $$ret ; fi

prefcolorlayout.h: $(srcdir)/prefcolorlayout.ui
	$(UIC) -o prefcolorlayout.h $(srcdir)/prefcolorlayout.ui

prefcolorlayout.moc: prefcolorlayout.h
	$(MOC) prefcolorlayout.h -o prefcolorlayout.moc

fileviewlayout.cpp: $(srcdir)/fileviewlayout.ui fileviewlayout.h fileviewlayout.moc
	rm -f fileviewlayout.cpp
	echo '#include <klocale.h>' > fileviewlayout.cpp
	$(UIC) -tr ${UIC_TR} -i fileviewlayout.h $(srcdir)/fileviewlayout.ui > fileviewlayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" fileviewlayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_fileviewlayout,g" >> fileviewlayout.cpp ;\
	rm -f fileviewlayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "fileviewlayout.moc"' >> fileviewlayout.cpp; else rm -f fileviewlayout.cpp ; exit $$ret ; fi

fileviewlayout.h: $(srcdir)/fileviewlayout.ui
	$(UIC) -o fileviewlayout.h $(srcdir)/fileviewlayout.ui

fileviewlayout.moc: fileviewlayout.h
	$(MOC) fileviewlayout.h -o fileviewlayout.moc

preffrontendlayout.cpp: $(srcdir)/preffrontendlayout.ui preffrontendlayout.h preffrontendlayout.moc
	rm -f preffrontendlayout.cpp
	echo '#include <klocale.h>' > preffrontendlayout.cpp
	$(UIC) -tr ${UIC_TR} -i preffrontendlayout.h $(srcdir)/preffrontendlayout.ui > preffrontendlayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" preffrontendlayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_preffrontendlayout,g" >> preffrontendlayout.cpp ;\
	rm -f preffrontendlayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "preffrontendlayout.moc"' >> preffrontendlayout.cpp; else rm -f preffrontendlayout.cpp ; exit $$ret ; fi

preffrontendlayout.h: $(srcdir)/preffrontendlayout.ui
	$(UIC) -o preffrontendlayout.h $(srcdir)/preffrontendlayout.ui

preffrontendlayout.moc: preffrontendlayout.h
	$(MOC) preffrontendlayout.h -o preffrontendlayout.moc

projectfileslayout.cpp: $(srcdir)/projectfileslayout.ui projectfileslayout.h projectfileslayout.moc
	rm -f projectfileslayout.cpp
	echo '#include <klocale.h>' > projectfileslayout.cpp
	$(UIC) -tr ${UIC_TR} -i projectfileslayout.h $(srcdir)/projectfileslayout.ui > projectfileslayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" projectfileslayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_projectfileslayout,g" >> projectfileslayout.cpp ;\
	rm -f projectfileslayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "projectfileslayout.moc"' >> projectfileslayout.cpp; else rm -f projectfileslayout.cpp ; exit $$ret ; fi

projectfileslayout.h: $(srcdir)/projectfileslayout.ui
	$(UIC) -o projectfileslayout.h $(srcdir)/projectfileslayout.ui

projectfileslayout.moc: projectfileslayout.h
	$(MOC) projectfileslayout.h -o projectfileslayout.moc

makelayout.cpp: $(srcdir)/makelayout.ui makelayout.h makelayout.moc
	rm -f makelayout.cpp
	echo '#include <klocale.h>' > makelayout.cpp
	$(UIC) -tr ${UIC_TR} -i makelayout.h $(srcdir)/makelayout.ui > makelayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" makelayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_makelayout,g" >> makelayout.cpp ;\
	rm -f makelayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "makelayout.moc"' >> makelayout.cpp; else rm -f makelayout.cpp ; exit $$ret ; fi

makelayout.h: $(srcdir)/makelayout.ui
	$(UIC) -o makelayout.h $(srcdir)/makelayout.ui

makelayout.moc: makelayout.h
	$(MOC) makelayout.h -o makelayout.moc

calltreelayout.cpp: $(srcdir)/calltreelayout.ui calltreelayout.h calltreelayout.moc
	rm -f calltreelayout.cpp
	echo '#include <klocale.h>' > calltreelayout.cpp
	$(UIC) -tr ${UIC_TR} -i calltreelayout.h $(srcdir)/calltreelayout.ui > calltreelayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" calltreelayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_calltreelayout,g" >> calltreelayout.cpp ;\
	rm -f calltreelayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "calltreelayout.moc"' >> calltreelayout.cpp; else rm -f calltreelayout.cpp ; exit $$ret ; fi

calltreelayout.h: $(srcdir)/calltreelayout.ui
	$(UIC) -o calltreelayout.h $(srcdir)/calltreelayout.ui

calltreelayout.moc: calltreelayout.h
	$(MOC) calltreelayout.h -o calltreelayout.moc

newprojectlayout.cpp: $(srcdir)/newprojectlayout.ui newprojectlayout.h newprojectlayout.moc
	rm -f newprojectlayout.cpp
	echo '#include <klocale.h>' > newprojectlayout.cpp
	$(UIC) -tr ${UIC_TR} -i newprojectlayout.h $(srcdir)/newprojectlayout.ui > newprojectlayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" newprojectlayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_newprojectlayout,g" >> newprojectlayout.cpp ;\
	rm -f newprojectlayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "newprojectlayout.moc"' >> newprojectlayout.cpp; else rm -f newprojectlayout.cpp ; exit $$ret ; fi

newprojectlayout.h: $(srcdir)/newprojectlayout.ui
	$(UIC) -o newprojectlayout.h $(srcdir)/newprojectlayout.ui

newprojectlayout.moc: newprojectlayout.h
	$(MOC) newprojectlayout.h -o newprojectlayout.moc

preffontlayout.cpp: $(srcdir)/preffontlayout.ui preffontlayout.h preffontlayout.moc
	rm -f preffontlayout.cpp
	echo '#include <klocale.h>' > preffontlayout.cpp
	$(UIC) -tr ${UIC_TR} -i preffontlayout.h $(srcdir)/preffontlayout.ui > preffontlayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" preffontlayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_preffontlayout,g" >> preffontlayout.cpp ;\
	rm -f preffontlayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "preffontlayout.moc"' >> preffontlayout.cpp; else rm -f preffontlayout.cpp ; exit $$ret ; fi

preffontlayout.h: $(srcdir)/preffontlayout.ui
	$(UIC) -o preffontlayout.h $(srcdir)/preffontlayout.ui

preffontlayout.moc: preffontlayout.h
	$(MOC) preffontlayout.h -o preffontlayout.moc

openprojectlayout.cpp: $(srcdir)/openprojectlayout.ui openprojectlayout.h openprojectlayout.moc
	rm -f openprojectlayout.cpp
	echo '#include <klocale.h>' > openprojectlayout.cpp
	$(UIC) -tr ${UIC_TR} -i openprojectlayout.h $(srcdir)/openprojectlayout.ui > openprojectlayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" openprojectlayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_openprojectlayout,g" >> openprojectlayout.cpp ;\
	rm -f openprojectlayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "openprojectlayout.moc"' >> openprojectlayout.cpp; else rm -f openprojectlayout.cpp ; exit $$ret ; fi

openprojectlayout.h: $(srcdir)/openprojectlayout.ui
	$(UIC) -o openprojectlayout.h $(srcdir)/openprojectlayout.ui

openprojectlayout.moc: openprojectlayout.h
	$(MOC) openprojectlayout.h -o openprojectlayout.moc

symbollayout.cpp: $(srcdir)/symbollayout.ui symbollayout.h symbollayout.moc
	rm -f symbollayout.cpp
	echo '#include <klocale.h>' > symbollayout.cpp
	$(UIC) -tr ${UIC_TR} -i symbollayout.h $(srcdir)/symbollayout.ui > symbollayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" symbollayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_symbollayout,g" >> symbollayout.cpp ;\
	rm -f symbollayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "symbollayout.moc"' >> symbollayout.cpp; else rm -f symbollayout.cpp ; exit $$ret ; fi

symbollayout.h: $(srcdir)/symbollayout.ui
	$(UIC) -o symbollayout.h $(srcdir)/symbollayout.ui

symbollayout.moc: symbollayout.h
	$(MOC) symbollayout.h -o symbollayout.moc

cscopemsglayout.cpp: $(srcdir)/cscopemsglayout.ui cscopemsglayout.h cscopemsglayout.moc
	rm -f cscopemsglayout.cpp
	echo '#include <klocale.h>' > cscopemsglayout.cpp
	$(UIC) -tr ${UIC_TR} -i cscopemsglayout.h $(srcdir)/cscopemsglayout.ui > cscopemsglayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" cscopemsglayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_cscopemsglayout,g" >> cscopemsglayout.cpp ;\
	rm -f cscopemsglayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "cscopemsglayout.moc"' >> cscopemsglayout.cpp; else rm -f cscopemsglayout.cpp ; exit $$ret ; fi

cscopemsglayout.h: $(srcdir)/cscopemsglayout.ui
	$(UIC) -o cscopemsglayout.h $(srcdir)/cscopemsglayout.ui

cscopemsglayout.moc: cscopemsglayout.h
	$(MOC) cscopemsglayout.h -o cscopemsglayout.moc

prefoptlayout.cpp: $(srcdir)/prefoptlayout.ui prefoptlayout.h prefoptlayout.moc
	rm -f prefoptlayout.cpp
	echo '#include <klocale.h>' > prefoptlayout.cpp
	$(UIC) -tr ${UIC_TR} -i prefoptlayout.h $(srcdir)/prefoptlayout.ui > prefoptlayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" prefoptlayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_prefoptlayout,g" >> prefoptlayout.cpp ;\
	rm -f prefoptlayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "prefoptlayout.moc"' >> prefoptlayout.cpp; else rm -f prefoptlayout.cpp ; exit $$ret ; fi

prefoptlayout.h: $(srcdir)/prefoptlayout.ui
	$(UIC) -o prefoptlayout.h $(srcdir)/prefoptlayout.ui

prefoptlayout.moc: prefoptlayout.h
	$(MOC) prefoptlayout.h -o prefoptlayout.moc

searchresultslayout.cpp: $(srcdir)/searchresultslayout.ui searchresultslayout.h searchresultslayout.moc
	rm -f searchresultslayout.cpp
	echo '#include <klocale.h>' > searchresultslayout.cpp
	$(UIC) -tr ${UIC_TR} -i searchresultslayout.h $(srcdir)/searchresultslayout.ui > searchresultslayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" searchresultslayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_searchresultslayout,g" >> searchresultslayout.cpp ;\
	rm -f searchresultslayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "searchresultslayout.moc"' >> searchresultslayout.cpp; else rm -f searchresultslayout.cpp ; exit $$ret ; fi

searchresultslayout.h: $(srcdir)/searchresultslayout.ui
	$(UIC) -o searchresultslayout.h $(srcdir)/searchresultslayout.ui

searchresultslayout.moc: searchresultslayout.h
	$(MOC) searchresultslayout.h -o searchresultslayout.moc

querywidgetlayout.cpp: $(srcdir)/querywidgetlayout.ui querywidgetlayout.h querywidgetlayout.moc
	rm -f querywidgetlayout.cpp
	echo '#include <klocale.h>' > querywidgetlayout.cpp
	$(UIC) -tr ${UIC_TR} -i querywidgetlayout.h $(srcdir)/querywidgetlayout.ui > querywidgetlayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" querywidgetlayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_querywidgetlayout,g" >> querywidgetlayout.cpp ;\
	rm -f querywidgetlayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "querywidgetlayout.moc"' >> querywidgetlayout.cpp; else rm -f querywidgetlayout.cpp ; exit $$ret ; fi

querywidgetlayout.h: $(srcdir)/querywidgetlayout.ui
	$(UIC) -o querywidgetlayout.h $(srcdir)/querywidgetlayout.ui

querywidgetlayout.moc: querywidgetlayout.h
	$(MOC) querywidgetlayout.h -o querywidgetlayout.moc

autocompletionlayout.cpp: $(srcdir)/autocompletionlayout.ui autocompletionlayout.h autocompletionlayout.moc
	rm -f autocompletionlayout.cpp
	echo '#include <klocale.h>' > autocompletionlayout.cpp
	$(UIC) -tr ${UIC_TR} -i autocompletionlayout.h $(srcdir)/autocompletionlayout.ui > autocompletionlayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" autocompletionlayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_autocompletionlayout,g" >> autocompletionlayout.cpp ;\
	rm -f autocompletionlayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "autocompletionlayout.moc"' >> autocompletionlayout.cpp; else rm -f autocompletionlayout.cpp ; exit $$ret ; fi

autocompletionlayout.h: $(srcdir)/autocompletionlayout.ui
	$(UIC) -o autocompletionlayout.h $(srcdir)/autocompletionlayout.ui

autocompletionlayout.moc: autocompletionlayout.h
	$(MOC) autocompletionlayout.h -o autocompletionlayout.moc

scanprogresslayout.cpp: $(srcdir)/scanprogresslayout.ui scanprogresslayout.h scanprogresslayout.moc
	rm -f scanprogresslayout.cpp
	echo '#include <klocale.h>' > scanprogresslayout.cpp
	$(UIC) -tr ${UIC_TR} -i scanprogresslayout.h $(srcdir)/scanprogresslayout.ui > scanprogresslayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" scanprogresslayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_scanprogresslayout,g" >> scanprogresslayout.cpp ;\
	rm -f scanprogresslayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "scanprogresslayout.moc"' >> scanprogresslayout.cpp; else rm -f scanprogresslayout.cpp ; exit $$ret ; fi

scanprogresslayout.h: $(srcdir)/scanprogresslayout.ui
	$(UIC) -o scanprogresslayout.h $(srcdir)/scanprogresslayout.ui

scanprogresslayout.moc: scanprogresslayout.h
	$(MOC) scanprogresslayout.h -o scanprogresslayout.moc

queryviewlayout.cpp: $(srcdir)/queryviewlayout.ui queryviewlayout.h queryviewlayout.moc
	rm -f queryviewlayout.cpp
	echo '#include <klocale.h>' > queryviewlayout.cpp
	$(UIC) -tr ${UIC_TR} -i queryviewlayout.h $(srcdir)/queryviewlayout.ui > queryviewlayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" queryviewlayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_queryviewlayout,g" >> queryviewlayout.cpp ;\
	rm -f queryviewlayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "queryviewlayout.moc"' >> queryviewlayout.cpp; else rm -f queryviewlayout.cpp ; exit $$ret ; fi

queryviewlayout.h: $(srcdir)/queryviewlayout.ui
	$(UIC) -o queryviewlayout.h $(srcdir)/queryviewlayout.ui

queryviewlayout.moc: queryviewlayout.h
	$(MOC) queryviewlayout.h -o queryviewlayout.moc

welcomedlg.cpp: $(srcdir)/welcomedlg.ui welcomedlg.h welcomedlg.moc
	rm -f welcomedlg.cpp
	echo '#include <klocale.h>' > welcomedlg.cpp
	$(UIC) -tr ${UIC_TR} -i welcomedlg.h $(srcdir)/welcomedlg.ui > welcomedlg.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" welcomedlg.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_welcomedlg,g" >> welcomedlg.cpp ;\
	rm -f welcomedlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "welcomedlg.moc"' >> welcomedlg.cpp; else rm -f welcomedlg.cpp ; exit $$ret ; fi

welcomedlg.h: $(srcdir)/welcomedlg.ui
	$(UIC) -o welcomedlg.h $(srcdir)/welcomedlg.ui

welcomedlg.moc: welcomedlg.h
	$(MOC) welcomedlg.h -o welcomedlg.moc

bookmarkslayout.cpp: $(srcdir)/bookmarkslayout.ui bookmarkslayout.h bookmarkslayout.moc
	rm -f bookmarkslayout.cpp
	echo '#include <klocale.h>' > bookmarkslayout.cpp
	$(UIC) -tr ${UIC_TR} -i bookmarkslayout.h $(srcdir)/bookmarkslayout.ui > bookmarkslayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" bookmarkslayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_bookmarkslayout,g" >> bookmarkslayout.cpp ;\
	rm -f bookmarkslayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "bookmarkslayout.moc"' >> bookmarkslayout.cpp; else rm -f bookmarkslayout.cpp ; exit $$ret ; fi

bookmarkslayout.h: $(srcdir)/bookmarkslayout.ui
	$(UIC) -o bookmarkslayout.h $(srcdir)/bookmarkslayout.ui

bookmarkslayout.moc: bookmarkslayout.h
	$(MOC) bookmarkslayout.h -o bookmarkslayout.moc

graphpreflayout.cpp: $(srcdir)/graphpreflayout.ui graphpreflayout.h graphpreflayout.moc
	rm -f graphpreflayout.cpp
	echo '#include <klocale.h>' > graphpreflayout.cpp
	$(UIC) -tr ${UIC_TR} -i graphpreflayout.h $(srcdir)/graphpreflayout.ui > graphpreflayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" graphpreflayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_graphpreflayout,g" >> graphpreflayout.cpp ;\
	rm -f graphpreflayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "graphpreflayout.moc"' >> graphpreflayout.cpp; else rm -f graphpreflayout.cpp ; exit $$ret ; fi

graphpreflayout.h: $(srcdir)/graphpreflayout.ui
	$(UIC) -o graphpreflayout.h $(srcdir)/graphpreflayout.ui

graphpreflayout.moc: graphpreflayout.h
	$(MOC) graphpreflayout.h -o graphpreflayout.moc
